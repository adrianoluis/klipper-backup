[gcode_macro M155]
description: read and display distance on the screen on a 'S'chedule.
variable_repeat_timer: 0
gcode:
  {% if 'S' in params %}
  {% set seconds = params.S|int %}
    #RESPOND MSG="time in seconds:"{seconds}
    SET_GCODE_VARIABLE MACRO=M155 VARIABLE=repeat_timer VALUE={seconds}
    UPDATE_DELAYED_GCODE ID=respond_temp_timer DURATION={seconds}
  {% endif %}

[gcode_macro M486]
description: Cancel Objects
gcode:
  # Parameters known to M486 are as follows:
  #    [C<flag>] Cancel the current object
  #    [P<index>] Cancel the object with the given index
  #    [S<index>] Set the index of the current object.
  #          If the object with the given index has been canceled, this will cause
  #          the firmware to skip to the next object. The value -1 is used to
  #          indicate something that isn’t an object and shouldn’t be skipped.
  #    [T<count>] Reset the state and set the number of objects
  #    [U<index>] Un-cancel the object with the given index. This command will be
  #          ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

######################################################################
# Filament Change
######################################################################
[gcode_macro M300]
description: Add a tone to the tone queue
gcode:
    {% set S = params.S|default(1000)|int %}
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER VALUE=0

[gcode_macro M600]
description: Filament Change. This macro will pause the printer, move
   the tool to the change position, and retract the filament 50mm.
   Adjust the retraction settings for your own extruder. After filament
   has been changed, the print can be resumed from its previous position
   with the "RESUME" gcode.
gcode:
  {% set X = params.X|default(50)|float %}
  {% set Y = params.Y|default(0)|float %}
  {% set Z = params.Z|default(10)|float %}
  SAVE_GCODE_STATE NAME=M600_state
  PAUSE
  G91
  G1 E-5.0 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-50 F1000
  RESTORE_GCODE_STATE NAME=M600_state

# Support SDCard looping
[sdcard_loop]

######################################################################
# SDCard 'looping' (aka Marlin M808 commands) support
######################################################################
[gcode_macro M808]
description: 'Marlin' style M808 compatibility macro for SDCard looping
gcode:
  {% if params.K is not defined and params.L is defined %}SDCARD_LOOP_BEGIN COUNT={params.L|int}{% endif %}
  {% if params.K is not defined and params.L is not defined %}SDCARD_LOOP_END{% endif %}
  {% if params.K is defined and params.L is not defined %}SDCARD_LOOP_DESIST{% endif %}

[gcode_macro M900]
description: Convert Marlin linear advance (M900) commands to Klipper
  (SET_PRESSURE_ADVANCE) commands. For use with Marlin's linear
  advance calibration: https://marlinfw.org/tools/lin_advance/k-factor.html
gcode:
  # Parameters
  {% set K = params.K|float %}
  SET_PRESSURE_ADVANCE ADVANCE={K}
